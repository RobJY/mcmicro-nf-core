/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: BASICPY {
        containerOptions = '--entrypoint "" --user root'
        publishDir = [
            path: { "${params.outdir}/illumination_correction/basicpy" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: ASHLAR {
        ext.args = '--maximum-shift 30'
        publishDir = [
            path: { "${params.outdir}/registration/ashlar" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "DEEPCELL_MESMER" {
        ext.prefix = { "mask_${meta.id}" }
        ext.args = {"--image-mpp=${params.pixel_size ?: 0.65} --nuclear-channel 0 --compartment nuclear"}
        ext.when = {params.segmentation && params.segmentation.split(',').contains('mesmer')}
        publishDir = [
            path: { "${params.outdir}/segmentation/deepcell_mesmer" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "CELLPOSE" {
        ext.when = {params.segmentation && params.segmentation.split(',').contains('cellpose')}
        publishDir = [
            path: { "${params.outdir}/segmentation/cellpose" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: MCQUANT {
        publishDir = [
            path: { "${params.outdir}/quantification/mcquant/${meta2.segmenter}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: "COREOGRAPH" {
        ext.args = { "--downsampleFactor ${Math.round(Math.log(0.65 * 32 / params.pixel_size) / Math.log(2))}" }
        publishDir = [
            path: { "${params.outdir}/tma_dearray" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

    }

    /*
    withName: SCIMAP_MCMICRO {
        containerOptions = '-e NUMBA_CACHE_DIR=/tmp'
    }
    */
}
